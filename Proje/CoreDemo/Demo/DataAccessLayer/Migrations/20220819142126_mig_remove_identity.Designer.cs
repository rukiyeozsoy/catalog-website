// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220819142126_mig_remove_identity")]
    partial class mig_remove_identity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concrete.About", b =>
                {
                    b.Property<int>("About_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About_MapLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("About_Status")
                        .HasColumnType("bit");

                    b.HasKey("About_ID");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Belenco", b =>
                {
                    b.Property<int>("Belenco_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Belenco_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Belenco_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Belenco_Status")
                        .HasColumnType("bit");

                    b.HasKey("Belenco_ID");

                    b.ToTable("Belencos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Calisco", b =>
                {
                    b.Property<int>("Calisco_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calisco_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calisco_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Calisco_Status")
                        .HasColumnType("bit");

                    b.HasKey("Calisco_ID");

                    b.ToTable("Caliscos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Cimstone", b =>
                {
                    b.Property<int>("Cimstone_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cimstone_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cimstone_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cimstone_Status")
                        .HasColumnType("bit");

                    b.HasKey("Cimstone_ID");

                    b.ToTable("Cimstones");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Coante", b =>
                {
                    b.Property<int>("Coante_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Coante_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coante_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Coante_Status")
                        .HasColumnType("bit");

                    b.HasKey("Coante_ID");

                    b.ToTable("Coantes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Comment", b =>
                {
                    b.Property<int>("Comment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Belenco_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Belenco_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Calisco_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Calisco_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Cimstone_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Cimstone_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Coante_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Coante_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Comment_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Comment_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Comment_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Comment_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment_UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Granit_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Granit_ID1")
                        .HasColumnType("int");

                    b.HasKey("Comment_ID");

                    b.HasIndex("Belenco_ID1");

                    b.HasIndex("Calisco_ID1");

                    b.HasIndex("Cimstone_ID1");

                    b.HasIndex("Coante_ID1");

                    b.HasIndex("Granit_ID1");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Contact", b =>
                {
                    b.Property<int>("Contact_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Contact_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Contact_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Contact_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Contact_Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Contact_ID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Granit", b =>
                {
                    b.Property<int>("Granit_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Granit_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Granit_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Granit_Status")
                        .HasColumnType("bit");

                    b.HasKey("Granit_ID");

                    b.ToTable("Granits");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Comment", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Belenco", "Belenco")
                        .WithMany("Comments")
                        .HasForeignKey("Belenco_ID1");

                    b.HasOne("EntityLayer.Concrete.Calisco", "Calisco")
                        .WithMany("Comments")
                        .HasForeignKey("Calisco_ID1");

                    b.HasOne("EntityLayer.Concrete.Cimstone", "Cimstone")
                        .WithMany("Comments")
                        .HasForeignKey("Cimstone_ID1");

                    b.HasOne("EntityLayer.Concrete.Coante", "Coante")
                        .WithMany("Comments")
                        .HasForeignKey("Coante_ID1");

                    b.HasOne("EntityLayer.Concrete.Granit", "Granit")
                        .WithMany("Comments")
                        .HasForeignKey("Granit_ID1");

                    b.Navigation("Belenco");

                    b.Navigation("Calisco");

                    b.Navigation("Cimstone");

                    b.Navigation("Coante");

                    b.Navigation("Granit");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Belenco", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Calisco", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Cimstone", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Coante", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Granit", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
